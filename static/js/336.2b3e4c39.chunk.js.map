{"version":3,"file":"static/js/336.2b3e4c39.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAEVC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzB,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,0BAPO,yDAAH,qDAWdC,EAAc,mCAAG,WAAMC,GAAN,gGAEIL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAH1B,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,8CAPO,yDAAH,sDAWdG,EAAiB,mCAAG,WAAMD,GAAN,gGAECL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAHvB,cAEhBG,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,8CAPU,yDAAH,sDAWjBI,EAAoB,mCAAG,WAAMF,GAAN,gGAEFL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,IAHZ,cAEnBG,EAFmB,yBAKlBA,GALkB,gCAOzBC,QAAQC,IAAI,8CAPa,yDAAH,sDAWpBK,EAAiB,mCAAG,WAAMC,GAAN,gGAECT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEW,IAH1E,cAEhBR,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,uDAPU,yDAAH,qD,sIC/CVO,EAAOC,EAAAA,GAAAA,GAAH,yEAKJC,EAAYD,EAAAA,GAAAA,IAAH,qFAMTE,EAAQF,EAAAA,GAAAA,IAAH,mE,mBCPLG,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAec,GAASG,MAAK,SAAApB,GAC3BgB,EAAQhB,EAASqB,KAAKN,KACvB,GACF,GAAE,CAACE,KAGF,SAACN,EAAD,UACGI,EAAKO,OAAS,IACb,SAACb,EAAD,UACGM,EAAKQ,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAtB,OACR,2BACE,SAACb,EAAD,CACEc,IACED,EAAY,yCAC0BA,GAClCE,EAENC,IAAKJ,KAEP,uBAAIA,MATGpB,EADD,OAiBnB,C","sources":["api-services/api-service.jsx","components/Cast/CastStyled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '248c7debf175a4fcfc603a67fcb6bb7a';\n\nconst fetchMoviesDay = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed');\n  }\n};\n\nconst fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieDetailById = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct movie title');\n  }\n};\n\nexport {\n  fetchMoviesDay,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieDetailById,\n  fetchMovieByQuery,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 16px;\n`;\n\nexport const Container = styled.div`\n  max-width: 120px;\n  max-height: 120px;\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  max-width: 380px;\n  max-height: 380px;\n`;\n","import { fetchMovieCast } from 'api-services/api-service';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Container, Image } from './CastStyled';\nimport placeholder from '../../images/placeholder.jpg';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(response => {\n      setCast(response.data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {cast.length > 0 && (\n        <List>\n          {cast.map(({ id, original_name, profile_path }) => (\n            <li key={id}>\n              <Image\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : placeholder\n                }\n                alt={original_name}\n              />\n              <p>{original_name}</p>\n            </li>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n"],"names":["BASE_URL","API_KEY","fetchMoviesDay","axios","response","console","log","fetchMovieCast","id","fetchMovieReviews","fetchMovieDetailById","fetchMovieByQuery","query","List","styled","Container","Image","Cast","useState","cast","setCast","movieId","useParams","useEffect","then","data","length","map","original_name","profile_path","src","placeholder","alt"],"sourceRoot":""}