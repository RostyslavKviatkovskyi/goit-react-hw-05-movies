{"version":3,"file":"static/js/871.3652a59c.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAEVC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzB,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,0BAPO,yDAAH,qDAWdC,EAAc,mCAAG,WAAMC,GAAN,gGAEIL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAH1B,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,8CAPO,yDAAH,sDAWdG,EAAiB,mCAAG,WAAMD,GAAN,gGAECL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAHvB,cAEhBG,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,8CAPU,yDAAH,sDAWjBI,EAAoB,mCAAG,WAAMF,GAAN,gGAEFL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,IAHZ,cAEnBG,EAFmB,yBAKlBA,GALkB,gCAOzBC,QAAQC,IAAI,8CAPa,yDAAH,sDAWpBK,EAAiB,mCAAG,WAAMC,GAAN,gGAECT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEW,IAH1E,cAEhBR,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,uDAPU,yDAAH,qD,wIC/CVO,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAG/B,OAAO,SAAC,KAAD,CAAMD,GAAIA,EAAV,SAAeC,GACvB,E,UCAYC,EAAe,WAAO,IAAD,QAChC,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAW,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACtCC,GAAqBC,EAAAA,EAAAA,QAAM,oBAACN,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAE1DG,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAqBU,GAASU,MAAK,SAAA1B,GACjCe,EAAef,EAAS2B,KACzB,GACF,GAAE,CAACX,IAeJ,GAAKF,EAAL,CAIA,MAPS,CAAEc,WATUd,EAAYe,YAAZ,yCACmBf,EAAYe,aAC9CC,EAOiBC,UANHC,KAAKC,MAAiC,GAA3BnB,EAAYoB,cAMTC,UALX,IAAIC,KAAKtB,EAAYuB,cACXC,eAAiB,0BAILC,YAFzCzB,EAAY0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACjD,sBAQIhB,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,UAAWI,EAA/B,EAA+BA,UAAWI,EAA1C,EAA0CA,YAE1C,OACE,4BACE,SAAC9B,EAAD,CAAYC,GAAIU,EAAhB,6BAEA,4BACE,gBAAKyB,IAAKjB,EAAYkB,IAAKhC,EAAYiC,SAEvC,0BACGjC,EAAYiC,MADf,KACwBZ,EADxB,QAGA,wCAAgBJ,EAAhB,QACA,sCACA,uBAAIjB,EAAYkC,YAChB,oCACA,uBAAIT,QAGN,4BACE,SAAC,KAAD,CAAM7B,GAAE,OAAUW,MAAO,CAAEC,KAAMC,EAAmB0B,SAApD,mBAGA,SAAC,KAAD,CAAMvC,GAAE,UAAaW,MAAO,CAAEC,KAAMC,EAAmB0B,SAAvD,yBAIF,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QA9BL,CAkCF,C","sources":["api-services/api-service.jsx","components/BackButton.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '248c7debf175a4fcfc603a67fcb6bb7a';\n\nconst fetchMoviesDay = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed');\n  }\n};\n\nconst fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieDetailById = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct movie title');\n  }\n};\n\nexport {\n  fetchMoviesDay,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieDetailById,\n  fetchMovieByQuery,\n};\n","import { Link } from 'react-router-dom';\n\nexport const BackButton = ({ to, children }) => {\n  // const location = useLocation();\n  // return <Link to={location.state?.from ?? '/movies'}>Go back</Link>;\n  return <Link to={to}>{children}</Link>;\n};\n","import { fetchMovieDetailById } from 'api-services/api-service';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackButton } from '../components/BackButton';\nimport placeholder from '../images/placeholder.jpg';\n\nexport const MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = location.state?.from ?? '/';\n  const backLocationOption = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieDetailById(movieId).then(response => {\n      setMovieDetail(response.data);\n    });\n  }, [movieId]);\n\n  const getMovieParams = () => {\n    const movieImage = movieDetail.poster_path\n      ? `https://image.tmdb.org/t/p/w500${movieDetail.poster_path}`\n      : placeholder;\n    const movieVote = Math.round(movieDetail.vote_average * 10);\n    const movieRelease = new Date(movieDetail.release_date);\n    const movieYear = movieRelease.getFullYear() || 'No information provided';\n    const movieGenres =\n      movieDetail.genres.map(genre => genre.name).join(' ') ||\n      'No genres provided';\n    return { movieImage, movieVote, movieYear, movieGenres };\n  };\n\n  if (!movieDetail) {\n    return;\n  }\n\n  const { movieImage, movieVote, movieYear, movieGenres } = getMovieParams();\n\n  return (\n    <div>\n      <BackButton to={backLinkRef}>Back to movies</BackButton>\n\n      <div>\n        <img src={movieImage} alt={movieDetail.title} />\n\n        <h1>\n          {movieDetail.title} ({movieYear})\n        </h1>\n        <p>User score: {movieVote}%</p>\n        <h2>Overview</h2>\n        <p>{movieDetail.overview}</p>\n        <h2>Genres</h2>\n        <p>{movieGenres}</p>\n      </div>\n\n      <nav>\n        <Link to={`cast`} state={{ from: backLocationOption.current }}>\n          Cast\n        </Link>\n        <Link to={`reviews`} state={{ from: backLocationOption.current }}>\n          Reviews\n        </Link>\n      </nav>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n"],"names":["BASE_URL","API_KEY","fetchMoviesDay","axios","response","console","log","fetchMovieCast","id","fetchMovieReviews","fetchMovieDetailById","fetchMovieByQuery","query","BackButton","to","children","MovieDetails","useState","movieDetail","setMovieDetail","movieId","useParams","location","useLocation","backLinkRef","state","from","backLocationOption","useRef","useEffect","then","data","movieImage","poster_path","placeholder","movieVote","Math","round","vote_average","movieYear","Date","release_date","getFullYear","movieGenres","genres","map","genre","name","join","src","alt","title","overview","current","Suspense","fallback"],"sourceRoot":""}