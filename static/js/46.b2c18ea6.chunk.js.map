{"version":3,"file":"static/js/46.b2c18ea6.chunk.js","mappings":"kTAEMA,EAAW,gCACXC,EAAU,mCAEVC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHzB,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,0BAPO,yDAAH,qDAWdC,EAAc,mCAAG,WAAMC,GAAN,gGAEIL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAH1B,cAEbG,EAFa,yBAKZA,GALY,gCAOnBC,QAAQC,IAAI,8CAPO,yDAAH,sDAWdG,EAAiB,mCAAG,WAAMD,GAAN,gGAECL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAHvB,cAEhBG,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,8CAPU,yDAAH,sDAWjBI,EAAoB,mCAAG,WAAMF,GAAN,gGAEFL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,IAHZ,cAEnBG,EAFmB,yBAKlBA,GALkB,gCAOzBC,QAAQC,IAAI,8CAPa,yDAAH,sDAWpBK,EAAiB,mCAAG,WAAMC,GAAN,gGAECT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEW,IAH1E,cAEhBR,EAFgB,yBAKfA,GALe,gCAOtBC,QAAQC,IAAI,uDAPU,yDAAH,qD,qIC/CVO,EAAOC,EAAAA,GAAAA,GAAH,yEAKJC,EAAYD,EAAAA,GAAAA,IAAH,qF,SCFTE,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAkBW,GAASG,MAAK,SAAAnB,GAC9BC,QAAQC,IAAIF,EAASoB,KAAKC,SAC1BN,EAAWf,EAASoB,KAAKC,QAC1B,GACF,GAAE,CAACL,KAGF,SAACL,EAAD,UACGG,EAAQQ,OAAS,GAChB,SAACb,EAAD,UACGK,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQrB,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaqB,MACb,uBAAID,MAFGpB,EADE,OAQf,2EAIP,C","sources":["api-services/api-service.jsx","components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '248c7debf175a4fcfc603a67fcb6bb7a';\n\nconst fetchMoviesDay = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed');\n  }\n};\n\nconst fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieDetailById = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct ID');\n  }\n};\n\nconst fetchMovieByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch {\n    console.log('The request was failed. Add the correct movie title');\n  }\n};\n\nexport {\n  fetchMoviesDay,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieDetailById,\n  fetchMovieByQuery,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 16px;\n`;\n\nexport const Container = styled.div`\n  min-width: 120px;\n  max-height: 120px;\n  display: flex;\n`;\n","import { fetchMovieReviews } from 'api-services/api-service';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Container } from './ReviewsStyled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(response => {\n      console.log(response.data.results);\n      setReviews(response.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ content, author, id }) => (\n            <li key={id}>\n              <h1>Author: {author}</h1>\n              <p>{content}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <div>We dont have any reviews for this movie yet.</div>\n      )}\n    </Container>\n  );\n};\n"],"names":["BASE_URL","API_KEY","fetchMoviesDay","axios","response","console","log","fetchMovieCast","id","fetchMovieReviews","fetchMovieDetailById","fetchMovieByQuery","query","List","styled","Container","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","then","data","results","length","map","content","author"],"sourceRoot":""}